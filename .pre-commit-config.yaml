---
# Pre-commit hooks for security scanning and code quality
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Terraform formatting and validation
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.83.2
    hooks:
      - id: terraform_fmt
        name: Format Terraform files
      # terraform_validate requires terraform init, skip for pre-commit
      # - id: terraform_validate
      #   name: Validate Terraform configuration
      # terraform_docs requires terraform-docs binary, skip for now
      # - id: terraform_docs
      #   name: Generate Terraform documentation

  # Security scanning with Trivy (local command)
  - repo: local
    hooks:
      - id: trivy-config
        name: Trivy IaC Security Scan
        entry: trivy config --config trivy.yaml --severity CRITICAL,HIGH --tf-vars terraform.tfvars --format table --exit-code 1 --skip-dirs venv,.venv,__pycache__,node_modules,.cache,.tox,.terraform .
        language: system
        pass_filenames: false
        files: \.(tf|yaml|yml|json)$

  # Secret detection with gitleaks (local command)
  - repo: local
    hooks:
      - id: gitleaks
        name: Detect secrets with gitleaks
        entry: gitleaks detect --source . --max-target-megabytes 10
        language: system
        pass_filenames: false

  # YAML/JSON formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: end-of-file-fixer
        name: Fix end of files
      - id: trailing-whitespace
        name: Remove trailing whitespace
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1000']

  # Checkov security scanning (local command)
  - repo: local
    hooks:
      - id: checkov
        name: Checkov security scan
        entry: checkov --quiet --compact --framework terraform -d .
        language: system
        pass_filenames: false
        files: \.(tf|yaml|yml|json)$

  # Python code quality (for scripts)
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        name: Format Python code
        files: \.py$

  # Ansible linting (only for playbooks directory)
  - repo: https://github.com/ansible/ansible-lint
    rev: v25.6.1
    hooks:
      - id: ansible-lint
        name: Ansible lint
        files: ^playbooks/.*\.(yml|yaml)$
