name: Security Scan

# Trigger on push to main/master and all pull requests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

# Allow manual trigger
  workflow_dispatch:

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    # Set permissions for GitHub token
    permissions:
      contents: read
      security-events: write
      pull-requests: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Full history needed for some security tools
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Security Tools
        run: |
          # Install Trivy
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

          # Install gitleaks
          wget -O gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v8.18.0/gitleaks_8.18.0_linux_x64.tar.gz
          tar -xzf gitleaks.tar.gz
          sudo mv gitleaks /usr/local/bin/

          # Install checkov
          pip install checkov

          # Install semgrep
          pip install semgrep

      - name: Run Secret Detection
        run: |
          echo "🔍 Running gitleaks secret detection..."
          gitleaks detect --source . --verbose --report-format sarif --report-path gitleaks.sarif || exit_code=$?
          if [ ${exit_code:-0} -ne 0 ]; then
            echo "❌ Secrets detected! Please remove them before merging."
            exit 1
          fi

      - name: Run Trivy Infrastructure Scan
        run: |
          echo "🔧 Running Trivy IaC security scan..."
          trivy config --config trivy.yaml --severity CRITICAL,HIGH --tf-vars terraform.tfvars --format sarif --output trivy-iac.sarif . || exit_code=$?
          if [ ${exit_code:-0} -ne 0 ]; then
            echo "❌ Critical/High severity infrastructure issues found!"
            exit 1
          fi

      - name: Run Trivy Filesystem Scan
        run: |
          echo "🗂️ Running Trivy filesystem scan..."
          trivy fs --config trivy.yaml --scanners vuln,secret,misconfig --format sarif --output trivy-fs.sarif . || exit_code=$?
          # Continue on vulnerability findings but fail on secrets/misconfig
          echo "✅ Trivy filesystem scan completed"

      - name: Run Checkov Security Scan
        run: |
          echo "☑️ Running Checkov security scan..."
          checkov --quiet --compact --framework terraform --output sarif --output-file checkov.sarif -d . || exit_code=$?
          if [ ${exit_code:-0} -ne 0 ]; then
            echo "❌ Checkov security issues found!"
            exit 1
          fi

      - name: Run Semgrep Static Analysis
        run: |
          echo "⚡ Running Semgrep static analysis..."
          semgrep --config=auto --severity=ERROR --sarif --output semgrep.sarif . || exit_code=$?
          if [ ${exit_code:-0} -ne 0 ]; then
            echo "❌ Semgrep found critical issues!"
            exit 1
          fi

      - name: Upload Security Results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: |
            gitleaks.sarif
            trivy-iac.sarif
            trivy-fs.sarif
            checkov.sarif
            semgrep.sarif
          category: security-scan

      - name: Create Security Report Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            let comment = '## 🔒 Security Scan Results\n\n';

            // Check if any SARIF files have findings
            const sarifFiles = ['gitleaks.sarif', 'trivy-iac.sarif', 'trivy-fs.sarif', 'checkov.sarif', 'semgrep.sarif'];
            let hasFindings = false;

            for (const file of sarifFiles) {
              try {
                if (fs.existsSync(file)) {
                  const content = JSON.parse(fs.readFileSync(file, 'utf8'));
                  if (content.runs && content.runs[0] && content.runs[0].results && content.runs[0].results.length > 0) {
                    hasFindings = true;
                    break;
                  }
                }
              } catch (e) {
                console.log(`Could not read ${file}: ${e.message}`);
              }
            }

            if (hasFindings) {
              comment += '❌ **Security issues detected!** Please review the Security tab for details.\n\n';
              comment += '### Next Steps:\n';
              comment += '1. Check the Security tab in this repository\n';
              comment += '2. Address any Critical or High severity findings\n';
              comment += '3. Re-run the security scan after fixes\n\n';
            } else {
              comment += '✅ **All security scans passed!** No security issues detected.\n\n';
            }

            comment += '### Scans Performed:\n';
            comment += '- 🔍 **Gitleaks**: Secret detection\n';
            comment += '- 🔧 **Trivy IaC**: Infrastructure as Code security\n';
            comment += '- 🗂️ **Trivy FS**: Filesystem vulnerability scan\n';
            comment += '- ☑️ **Checkov**: Policy compliance\n';
            comment += '- ⚡ **Semgrep**: Static code analysis\n';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Security Scan Summary
        if: always()
        run: |
          echo "🔒 Security Scan Summary:"
          echo "========================"
          echo "✅ Secret Detection: Completed"
          echo "✅ Infrastructure Scan: Completed"
          echo "✅ Filesystem Scan: Completed"
          echo "✅ Policy Compliance: Completed"
          echo "✅ Static Analysis: Completed"
          echo ""
          echo "📊 View detailed results in the Security tab"
          echo "🔗 https://github.com/${{ github.repository }}/security/code-scanning"
